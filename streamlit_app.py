# Nome do arquivo: app.py

import streamlit as st
import pandas as pd
import numpy as np
import openai # Importa a biblioteca da OpenAI
import os # Para acessar vari√°veis de ambiente
from dotenv import load_dotenv # Para carregar o arquivo .env

# Carrega as vari√°veis do arquivo .env (sua chave de API)
load_dotenv()

# --- CONFIGURA√á√ÉO DA CHAVE DE API ---
# Pega a chave de API do ambiente. O Streamlit Cloud usar√° os "Secrets".
openai.api_key = os.getenv("OPENAI_API_KEY")

# --- FUN√á√ÉO PARA CHAMAR A IA ---
# Esta fun√ß√£o encapsula a chamada para a OpenAI, tornando o c√≥digo mais limpo.
def gerar_atividade_ia(aluno, habilidade, pontos_fortes):
    """
    Usa a API da OpenAI para gerar uma atividade pedag√≥gica personalizada.
    """
    # Este √© o "prompt", a instru√ß√£o que damos para a IA.
    # Quanto mais detalhado, melhor a resposta.
    prompt_detalhado = f"""
    Aja como um especialista em psicopedagogia e educa√ß√£o inclusiva.

    Sua tarefa √© criar uma atividade pedag√≥gica detalhada, criativa e eficaz para o seguinte perfil de aluno:
    - **Aluno:** {aluno}
    - **Habilidade da BNCC a ser trabalhada:** {habilidade}
    - **Pontos Fortes e Interesses do Aluno:** {pontos_fortes}

    A atividade deve ser:
    1.  **L√∫dica e Engajadora:** Use os interesses do aluno como tema central.
    2.  **Adaptada:** Inclua sugest√µes claras de adapta√ß√£o para as necessidades espec√≠ficas do aluno (mencionadas no perfil).
    3.  **Estruturada:** Apresente a atividade com "Objetivo", "Materiais Necess√°rios" e "Passo a Passo".
    4.  **Inclusiva:** Foco no refor√ßo positivo e na celebra√ß√£o do progresso.

    Retorne a resposta formatada em Markdown, pronta para ser exibida.
    """

    try:
        response = openai.chat.completions.create(
            model="gpt-3.5-turbo",  # Modelo de IA que vamos usar
            messages=[
                {"role": "system", "content": "Voc√™ √© um assistente especialista em educa√ß√£o inclusiva."},
                {"role": "user", "content": prompt_detalhado}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        return f"Ocorreu um erro ao conectar com a API da OpenAI: {e}"


# --- O restante do c√≥digo da interface (Sidebar, Dashboard) permanece o mesmo ---

# --- BARRA LATERAL (SIDEBAR) ---
with st.sidebar:
    st.title("üéì EduInclusiva")
    
    pagina_selecionada = st.radio(
        "Navegue pela Plataforma",
        ["Dashboard", "Pedag√≥gico IA", "Colabora√ß√£o Multidisciplinar"],
        captions=["Vis√£o Geral do Progresso", "Gera√ß√£o de Atividades com IA", "Comunica√ß√£o da Equipe"]
    )
    
    st.success("Aplica√ß√£o criada com Streamlit e hospedada na Streamlit Community Cloud.")
    st.info("Navegue pelas p√°ginas para ver as funcionalidades.")

# --- P√ÅGINA: DASHBOARD ---
if pagina_selecionada == "Dashboard":
    st.header("Dashboard de Gest√£o", divider='rainbow')

    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.metric(label="Total de Alunos", value="1,247", delta="+12%")
    with col2:
        st.metric(label="PEIs Ativos", value="342", delta="+8%")
    with col3:
        st.metric(label="Atividades Realizadas", value="2,156", delta="+23%")
    with col4:
        st.metric(label="Taxa de Evolu√ß√£o M√©dia", value="87%", delta="+5%")

    st.subheader("Evolu√ß√£o Geral dos Alunos")
    
    chart_data = pd.DataFrame(
        {
            "Progresso (%)": [65, 70, 75, 78, 82, 87],
        },
        index=['Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho']
    )
    st.line_chart(chart_data)

# --- P√ÅGINA: PEDAG√ìGICO IA ---
elif pagina_selecionada == "Pedag√≥gico IA":
    st.header("üß† Pedag√≥gico Inteligente", divider='rainbow')
    st.write("Gere atividades personalizadas com IA, alinhadas √† BNCC e √†s necessidades de cada aluno.")

    with st.form("pedagogico_form"):
        st.subheader("Configura√ß√£o da Atividade")
        
        aluno_selecionado = st.selectbox(
            "Selecione o Aluno",
            ["Jo√£o Silva Santos - TEA N√≠vel 1 (3¬∫ Ano)", "Maria Santos - TDAH (4¬∫ Ano)", "Pedro Costa - Dislexia (2¬∫ Ano)"]
        )
        
        habilidade_bncc = st.text_input("Habilidade da BNCC", "EF03MA01: Ler, escrever e comparar n√∫meros naturais...")

        pontos_fortes = st.text_area("Pontos Fortes do Aluno (interesses, habilidades, etc.)", "Excelente mem√≥ria visual, grande interesse por dinossauros, bom em atividades de montar.")
        
        submitted = st.form_submit_button("ü§ñ Gerar Atividade com IA")
        if submitted:
            if not openai.api_key:
                st.error("Chave de API da OpenAI n√£o configurada. Por favor, adicione-a nos segredos da aplica√ß√£o.")
            else:
                with st.spinner('Aguarde... Nossa IA est√° elaborando a melhor atividade para o perfil selecionado...'):
                    # Chamada real para a fun√ß√£o da IA
                    resposta_ia = gerar_atividade_ia(aluno_selecionado, habilidade_bncc, pontos_fortes)
                    st.success("Atividade gerada com sucesso!")
                    st.balloons()
                    # Exibe a resposta formatada da IA
                    st.markdown(resposta_ia)

# --- P√ÅGINA: COLABORA√á√ÉO ---
elif pagina_selecionada == "Colabora√ß√£o Multidisciplinar":
    st.header("üë• Colabora√ß√£o Multidisciplinar", divider='rainbow')
    st.write("Um espa√ßo para a equipe trocar informa√ß√µes e registrar o progresso de forma unificada.")

    st.text_input("Digite sua mensagem para a equipe...", key="chat_input", placeholder="Use @ para mencionar um colega...")
    st.button("Enviar Mensagem")

    st.subheader("√öltimas Atualiza√ß√µes")
    st.info("Dra. Paula (Psic√≥loga): Jo√£o demonstrou √≥tima intera√ß√£o na sess√£o de hoje. Recomendo atividade em grupo.", icon="üë©‚Äç‚öïÔ∏è")
    st.warning("Carlos (Fonoaudi√≥logo): Notei uma pequena dificuldade com d√≠grafos. Vamos focar nisso na pr√≥xima semana.", icon="üó£Ô∏è")
